// @import '../public/custom.scss';

@import "node_modules/bootstrap/scss/bootstrap";
@viewport {
	width: device-width ;
	zoom: 1.0;
	user-zoom: fixed;
}

@media (orientation: portrait) {
	#root {
		width: 100vmin !important;
		height: 100vmax !important;
	}
}

@media (orientation: landscape) {
	#root {
		width: 100vmax !important;
		height: 100vmin !important;
	}
}


:root {
	/* Colors: */
	--inactiveCellHue: 120;
	--inactiveCellSat: 0%;

	--safeCellHue: 120;
	--safeCellSat: 50%;

	--bombCellHue: 0;
	--bombCellSat: 50%;

	--cellLum: 60%;
	--cellHoverLum: 50%;

	--borderColor: black;
	--borderWidth: 2px;

	--hintBtn: hsl(208, 100%, 45%);
	--hintBtnHover: hsl(208, 100%, 35%);
	--hintBtnActive: hsl(91, 50%, 60%);
	--hintBtnActiveHover: hsl(91, 50%, 40%);
	--disabledColor: hsl(208, 0%, 45%);

	--cardOffColor: hsl(90, 70%, 80%);
	--cardOnColor: hsl(90, 70%, 95%);
	--cardHighlight: hsl(90, 70%, 90%);

	--playBackgroundColor: hsl(200, 50%, 80%);
	--pageBackground: hsl(80, 10%, 95%);

	--linkColor: var(--playBackgroundColor);
	--linkHoverColor: hsl(200, 50%, 60%);
	--linkActiveColor: hsl(200, 50%, 70%);
	--textColor: hsl(0, 0%, 20%);

	/* Size Defaults */
	--fontSize: clamp(0.5rem, 2vw, 4rem);

	// Cell properties (based off of height
	// Using Calculator: https://www.omnicalculator.com/math/hexagon
		// Height (s) - clamped to shrink and expand with screen size
	--hexHeight: clamp(2.5rem, 9vw, 7rem);
		// Side Length (a) - used for the width of rectangular div's
	--hexSide: calc(var(--hexHeight)*0.5774);
		// Width (d) - width of entire hex when laying on side.
	--hexWidth: calc(var(--hexHeight)*1.1547);
		// Half Width (R) - used to move cells the appropriate amount
	--hexHalfWidth: calc(var(--hexHeight)*0.5774);
		// Half Height (r) - used to move cells the appropriate amount
	--hexHalfHeight: calc(var(--hexHeight)/2);

	--rowGap: calc(var(--hexSide) + ((var(--hexHalfWidth) - var(--hexHalfHeight)) * 2));
	--rowHeight: var(--hexHalfWidth);

	--gameMargin: 1rem auto calc(1rem + (var(--cellHeight) / 2)) auto;
	--gamePadding: 0 2rem;

	--titleSize: clamp(0.8rem, 6vw, 5rem);
	--subTitleSize: clamp(0.8rem, 4vw, 5rem);
	

	// Fonts
	--standFont:		'Merriweather', serif;
	// --standFont:	'Sigmar One', sans-serif;
	--fancyFont:		'Vujahday Script', "Brush Script MT", cursive;
}

#pageContainer {
	display: flex;
	flex-flow: column nowrap;
	justify-content: space-between;
	gap: 1rem;
	min-width: 460px;
	padding: 0 1rem;

	// min-height: 100vh;
}

*, html, body {
	margin: 0;
	box-sizing: border-box;
	user-select: none;
}

body {
	// height: 100vh;
	// width: 100vw;
	overflow: hidden;
	// margin: 0 1rem;
	background-color: var(--pageBackground);
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	/* Prevent user from overscrolling and refreshing page on mobile */
	overscroll-behavior: contain;
	/* Display/Position */
	position:fixed;
	margin:0;
	padding:0;
	width:100%;
	height:100%;
}

p {
	margin: 0;
}

p, span, h1, h2, h3, h4, h5, h6 {
	color: var(--textColor);
	font-family: var(--standFont);
}

.cardBody {
	background-color: var(--cardOnColor);
}

.cardHeader {
	background-color: var(--cardOffColor);
}

.cardHighlight {
	background-color: var(--cardHighlight);
}